@model EntityLayer.Concrete.User
@{
    ViewBag.Title = "UpdateUserByPatient";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}



<h3>Edit Informations</h3>

@using (Html.BeginForm("UpdateUserByPatient", "AdminUser", FormMethod.Post))
{
    @Html.HiddenFor(x => x.userID)
    @Html.HiddenFor(x => x.userPreName)
    @Html.HiddenFor(x => x.userLastName)

<div class="form-group">
    @Html.Label("Patient First Name")
    <input type="text" name="inputName" disabled value="@Model.userPreName">
    <br />
    @Html.Label("Patient Last Name")
    <input type="text" name="inputName" disabled value="@Model.userLastName">
    <br />
    <label for="userEmail">Email:</label><br>
    <input type="email" name="userEmail" id="userEmail" value = @Model.userEmail class ="input" required><br>
    <br />
    @Html.Label("User Password")
    @Html.TextBoxFor(x => x.userPassword, new { @class = "form-control", @required = "required" })
    <br />

    <br />
    <button class="btn btn-success">Update</button>
</div>
}


<script>
    var email = document.getElementById("userEmail").value;
    var lblError = document.getElementById("lblError");
    lblError.innerHTML = "";
    var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
    if (!expr.test(email)) {
        lblError.innerHTML = "Invalid email address.";
    }
    return true;
    }

</script>