@model List<EntityLayer.Concrete.Doctor>
@using GridMvc.Html
@{
    ViewBag.Title = "IndexInTableFormat";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<h3>Doctors</h3>
<br />
<div class="code-cut">
    @(Html.Grid(Model).Named("Doctors").Columns(c =>
{

    c.Add(model => model.doctorID).Titled("Doctor ID").Filterable(true).Sortable(true);
    c.Add(model => model.doctorPreName).Titled("Prename").Filterable(true).Sortable(true);
    c.Add(model => model.doctorLastName).Titled("Lastname").Filterable(true).Sortable(true);
    c.Add(model => model.birthDate).Titled("Birth Date").Filterable(true).Sortable(true);
    c.Add(model => model.doctorEmail).Titled("Email").Filterable(true).Sortable(true);
    c.Add(model => model.doctorPhoneNo).Titled("Phone No").Filterable(true).Sortable(true);
    c.Add(model => model.socSecNo).Titled("Social Security Number").Filterable(true).Sortable(true);
    c.Add(model => model.salary).Titled("Salary").Filterable(true).Sortable(true);
    c.Add(model => model.Department.departmentName).Titled("Department").Filterable(true).Sortable(true);
    c.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(x => Html.ActionLink("Delete", "DeleteDoctor", new { id = x.doctorID }));
    c.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(x => Html.ActionLink("Update", "UpdateDoctor", new { id = x.doctorID }));
}).WithPaging(10).EmptyText("No data found")

)
    </div>

