@model List<EntityLayer.Concrete.Patient>
@using GridMvc.Html
@{
    ViewBag.Title = "IndexInTableFormat";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-3.4.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<br />
<div class="code-cut">
    @(Html.Grid(Model).Named("Patients").Columns(c =>
{

    c.Add(model => model.patientID).Titled("Patient ID").Filterable(true).Sortable(true);
    c.Add(model => model.patientPreName).Titled("Prename").Filterable(true).Sortable(true);
    c.Add(model => model.patientLastName).Titled("Lastname").Filterable(true).Sortable(true);
    c.Add(model => model.patientBirthDate).Titled("Birth Date").Filterable(true).Sortable(true);
    c.Add(model => model.patientEmail).Titled("Email").Filterable(true).Sortable(true);
    c.Add(model => model.patientSocSecNo).Titled("Social Security Number").Filterable(true).Sortable(true);
    c.Add(model => model.userID).Titled("User ID").Filterable(true).Sortable(true);
    c.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(x => Html.ActionLink("Delete", "DeletePatient", new { id = x.patientID }));
    c.Add().Encoded(false).Sanitized(false).SetWidth(30).RenderValueAs(x => Html.ActionLink("Update", "UpdatePatient", new { id = x.patientID }));
}).WithPaging(10).EmptyText("No data found")

)
</div>



